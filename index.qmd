---
title: "Runapp talk"
author: "James Goldie"
format:
  revealjs: 
    theme: [default, style.scss]
    width: 1400
    css:
      - https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.2/font/bootstrap-icons.css
---

## Today

:::: {.columns}
::: {.column width="50%"}
1. **Who I am**
  - My background
2. **What are reproducible reports?**
  - R Markdown
  - Notebooks (eg. Jupyter)
  - Survey time!
3. **What's Quarto?**
  - How it works
4. **Advantage A: it brings the ecosystem together**
  - Languages
  - RMarkdown extensions
  - Future ecosystem? Extensibility?
:::
::: {.column width="50%"}
5. **Advantage B: reactivity**
  - Problem: Having things change as you read (not just when I render)
  - The crappy way: event listeners
  - Existing models of reactivity: Shiny and Dash
    - Downside: need a server running!
  - Quarto and Observable
:::
::::

# I'm James {.text-wash-black background="aquamarine"}

## {.text-wash-seafoam}

::: {.notes}
Blah
:::

::::: {.columns style="text-align:center;margin-top:50px;"}

:::: {.column width="50%" style="margin-top:50px"}
::: {.r-stack}
![](images/gradloopinf.gif){.fragment .fade-in-then-semi-out fragment-index=1 style="width:70%;transform:rotate(-5deg);" fig-alt="A picture of me and my PhD supervisor, Lisa Alexander, at my graduation."}

![](images/mcccrh-zoom.png){.fragment .fade-in-then-semi-out fragment-index=2 style="transform:rotate(5deg);" fig-alt="A picture of me and MCCCRH staff members on Zoom."}

![](images/mcccrh.gif){.fragment .fade-in-then-semi-out fragment-index=3 style="transform:rotate(-1deg);" fig-alt="A picture of me and MCCCRH staff members on a work trip."}

![](images/mcccrh-projections.jpg){.fragment .fade-in-then-semi-out fragment-index=4 style="transform:rotate(1.5deg); fig-alt="A picture of Graham Creed from the ABC presenting climate projections."}

![](images/mcccrh-7news.gif){.fragment .fade-in-then-semi-out fragment-index=5 style="transform:rotate(-3.5deg);" fig-alt="A picture of Jane Bunn presenting statistics on shrinking winters."}

![](images/360logo.png){.fragment fragment-index=6 style="width:85%" fig-alt="The 360info logo."}
:::
::::

:::: {.column width="50%"  style="margin-top:25px"}
::: {.fragment fragment-index=1}
I used to be a climate + health researcher 
:::
::: {.fragment fragment-index=2}
â€¢

Worked with **[CLEX](https://climateextremes.org.au)** and **[MCCCRH](https://monash.edu/mcccrh)** on climate change communication
:::
::: {.fragment fragment-index=6}
â€¢

Now a data journalist with **[360info.org](https://360info.org)!**
:::
::::

:::::

## Poll: what tools do you use? {.text-wash-seafoam}

:::: {.columns}
:::{.column width="40%"}
![](./images/qrcode-survey.png){style="filter:invert(1)" fig-alt="A QR code for the survey."}
:::

::: {.column width="60%" .center}
<br>Take the survey at **<https://forms.gle/GtszJpXZYjppsQAz8>**
:::
::::

## {.text-wash-seafoam}

```{ojs}
md`## Poll results (Respondents: ${respondentCount})`
```

```{ojs}

import { liveGoogleSheet } from "@jimjamslam/live-google-sheet";
import { aq, op } from "@uwdata/arquero";

surveyResults = liveGoogleSheet(
  "https://docs.google.com/spreadsheets/d/e/" +
    "2PACX-1vSVQzZlkSWWR38FRKyFbO2WGYo04ehrJt4TvWkRVOJ7WPRmfQzPAf7AjtyV2EjIY-2DwKW-SfzLoEQw/" +
    "pub?gid=1368316628&single=true&output=csv",
  30000, 1, 2);

respondentCount = surveyResults.length;
```

```{ojs}
// get the counts of people using and interested in tools
countsUsed = aq.from(surveyResults)
  .derive({ used: d => op.split(d.responseUsed, ", ") })
  .select("used")
  .unroll("used")
  .groupby("used")
  .count()
  .derive({ measure: d => "Have used" })
  .rename({ used: "tool" })
```

```{ojs}
countsWant = aq.from(surveyResults)
  .derive({ want: d => op.split(d.responseWant, ", ") })
  .select("want")
  .unroll("want")
  .groupby("want")
  .count()
  .derive({ measure: d => "Want to learn" })
  .rename({ want: "tool" })
```

```{ojs}
// combine the two counts into one dataset again
countsAll = [...countsUsed.objects(), ...countsWant.objects()];

plotUsed = Plot.plot({
  marks: [
    Plot.barX(countsAll, { y: "tool", x: "count", fill: "tool" }),
    Plot.ruleX([respondentCount])
  ],
  x : { label: "" },
  y : { label: "", tickSize: 0 },
  facet: { data: countsAll, x: "measure", label: "" },
  marginLeft: 140,
  style: {
    backgroundColor: "black",
    color: "white",
    width: 1350,
    height: 500,
    fontSize: 12,
  }
});
```

<!-- keep a qr code up in the top-right corner -->
![](./images/qrcode-survey.png){style="filter:invert(1);position:fixed;top:0;right:0;" fig-alt="A picture of a QR code to the survey."}

# What are <br><span style="background:orange;padding-inline:20px;">reproducible reports?</span> {.text-wash-black background="goldenrod"}

## {background-image="images/confused-dog.jpg"}

::: {.notes}
If you work in Python or Julia, you may have heard of **notebooks**

R users might have heard of **reproducible reports**

All examples of **literate programming**

Literate programming is about _explaining your code_ by combining code with written prose and graphics
:::

##

::: {.notes}
Very nice to read!

Readable even if you didn't write it

File format is opaque and hard to version control

Files shared or hosted on special notebook services
:::

:::: {.columns}
::: {.column width="50%" style="margin-top:30px;"}
### Notebooks {.text-wash-yellow}

* Contain:
  - Writing
  - Code
  - <span style="color:gold;">**Results in the file too**</span>

:::
::: {.column width="50%"}

![](images/notebook.png){fig-alt="A picture of a Jupyter notebook loaded into Visual Studio Code."}
:::
::::

## Reproducible reports {.text-wash-yellow}

Source **documents** are **rendered** to produce **results**

::: {.notes}
R Markdown is more common among R users

Instead of code and results together, we _render_ a source document

Contains writing and code, but not results!

An R Markdown document is _rendered_. The final report is a separate file!

Plain text source file

Easy to see changes over time in version control

Docs, books, websites, presentations...

Need R to run it
:::

:::: {.columns}
::: {.column width="50%"}
![](images/rmd-source.png){fig-alt="An R Markdown source document in a plain text code editor"}
:::
<!-- ::: {.column width="20%"}
 
::: -->
::: {.column width="50%"}
![](images/rmd-render.png){fig-alt="An R Markdown document rendered into HTML with a plot in it."}
:::
::::

# Quarto:<br><span style="font-size:75%;">Literate programming for <span style="background:#8a35de;padding-inline:20px;">everyone</span><span> { background="#7609e3"}

## Notebooks or documents: your choice {.text-wash-indigo background="white"}

::: {.notes}
These two approaches have pros and cons

Quarto lets us have our cake and eat it too!

(dot points)

Quarto can accomodate just about any workflow
:::

![](images/notebook-vs-document.png){fig-alt="A picture of the same Quarto document side-by-side, written in notebook form on the left and document form on the right." style="width:100%; height:auto;"}

<!-- * Write in a **notebook** `.ipynb` or in a **document** `.qmd`
* Use **any language** in either format
* No need to install programming languages if you aren't using them
* Write in **R Studio**, **VS Code** or **Jupyter Lab**
  - Render in any of these, or in the shell:
* Make HTML documents, PDFs, Word documents, websites, Powerpoint presentations...
- These slides use Quarto and **[Reveal.js](https://revealjs.com)**! -->

## The RMarkdown ecosystem {.text-wash-yellow}

::: {.notes}
Because R Markdown gets rendered, it can make lots of different kinds of documents!
:::

::: {style="text-align:center;margin-top:175px;"}

Packages for just about every kind of document:

[`xaringan`](https://github.com/yihui/xaringan) â€¢ [`distill`](https://rstudio.github.io/distill) â€¢ [`blogdown`](https://bookdown.org/yihui/blogdown) â€¢ [`hugodown`](https://github.com/r-lib/hugodown) â€¢ [`bookdown`](https://bookdown.org) â€¢ [`thesisdown`](https://github.com/ismayc/thesisdown) â€¢ [`oxforddown`](https://ulyngs.github.io/oxforddown) â€¢ [`unswthesisdown`](https://github.com/jimjam-slam/unswthesisdown) â€¢ [`pagedown`](https://github.com/rstudio/pagedown) â€¢ [`flexdashboard`](https://pkgs.rstudio.com/flexdashboard/) â€¢ [`rmdformats`](https://github.com/juba/rmdformats) â€¢ [`rticles`](https://github.com/rstudio/rticles) â€¢ [`prettydoc`](https://prettydoc.statr.me/) â€¢ [`markdowntemplates`](https://github.com/hrbrmstr/markdowntemplates)  â€¢ and more...
:::


<!-- ## OLD Outline {.text-wash-yellow}


```{r}
ggplot2::ggplot()
```

- What is Quarto?
  - How it builds on RMarkdown
    - RMarkdown/Knitr ecosystem, extensions, other languages
    - Extensibility! ðŸŽ‰
    - But also: fragmentation,which  and heavy reliance on R
  - Quarto packs all these tools in
    - Only needs R if you're doing computation with R
    - ... -->

