---
title: "Runapp talk"
author: "James Goldie"
format:
  revealjs: 
    theme: [default, style.scss]
    width: 1400
    css:
      - https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.2/font/bootstrap-icons.css
---

## Today {.text-wash-yellow}

:::: {.columns}
::: {.column width="50%"}
1. **Who I am**
  - My background
2. **What are reproducible reports?**
  - R Markdown
  - Notebooks (eg. Jupyter)
  - Survey time!
3. **What's Quarto?**
  - How it works
4. **Advantage A: it brings the ecosystem together**
  - Languages
  - RMarkdown extensions
  - Future ecosystem? Extensibility?
:::
::: {.column width="50%"}
5. **Advantage B: reactivity**
  - Problem: Having things change as you read (not just when I render)
  - The crappy way: event listeners
  - Existing models of reactivity: Shiny and Dash
    - Downside: need a server running!
  - Quarto and Observable
:::
::::

# Introduction {.text-wash-black background="aquamarine"}

## I'm James

::::: {.columns style="text-align:center;margin-top:50px;"}

:::: {.column width="50%"}
::: {.r-stack}
![](images/gradloopinf.gif){.fragment .fade-in-then-semi-out fragment-index=1 style="width:70%;transform:rotate(-5deg);"}

![](images/mcccrh-zoom.png){.fragment .fade-in-then-semi-out fragment-index=2 style="transform:rotate(5deg);"}

![](images/mcccrh.gif){.fragment .fade-in-then-semi-out fragment-index=3 style="transform:rotate(-1deg);"}

![](images/mcccrh-projections.jpg){.fragment .fade-in-then-semi-out fragment-index=4 style="transform:rotate(1.5deg);"}

![](images/mcccrh-7news.gif){.fragment .fade-in-then-semi-out fragment-index=5 style="transform:rotate(-3.5deg);"}

![](images/360logo.png){.fragment fragment-index=6 style="width:85%"}
:::

::::

:::: {.column width="50%"}

::: {.fragment fragment-index=1}
I used to be a climate + health researcher 
:::

::: {.fragment fragment-index=2}
Worked at **[monash.edu/mcccrh](https://monash.edu/mcccrh)** on climate change communication
:::

::: {.fragment fragment-index=6}
Now a data journalist with **[360info.org](https://360info.org)!**
:::

::::


<!-- ::: {.column width="25%"}
<i class="bi bi-alarm-fill" style="font-size:5rem;"></i>

Former climate + health researcher
:::
::: {.column width="25%"}
More interested in visualising data
:::
::: {.column width="25%"}
Worked at MCCCRH to help Australians understand climat change
:::
::: {.column width="25%"}
Now at 360info
::: -->

:::::

::: {.notes}
Blah
:::

## Outline

```{r}
ggplot2::ggplot()
```

- What is Quarto?
  - How it builds on RMarkdown
    - RMarkdown/Knitr ecosystem, extensions, other languages
    - Extensibility! ðŸŽ‰
    - But also: fragmentation,which  and heavy reliance on R
  - Quarto packs all these tools in
    - Only needs R if you're doing computation with R
    - ...

## Survey: what tools do you use?

:::: {.columns}
:::{.column width="40%"}
![](./images/qrcode-survey.png){style="filter:invert(1)"}
:::

::: {.column width="60%" .center}
<br>Take the survey at **<https://forms.gle/GtszJpXZYjppsQAz8>**
:::
::::

## {.text-wash-seafoam}

```{ojs}
md`## Survey results (Respondents: ${respondentCount})`
```

```{ojs}

import { liveGoogleSheet } from "@jimjamslam/live-google-sheet";
import { aq, op } from "@uwdata/arquero";

surveyResults = liveGoogleSheet(
  "https://docs.google.com/spreadsheets/d/e/" +
    "2PACX-1vSVQzZlkSWWR38FRKyFbO2WGYo04ehrJt4TvWkRVOJ7WPRmfQzPAf7AjtyV2EjIY-2DwKW-SfzLoEQw/" +
    "pub?gid=1368316628&single=true&output=csv",
  30000, 1, 2);

respondentCount = surveyResults.length;
```

```{ojs}

// get the counts of people using and interested in tools
countsUsed = aq.from(surveyResults)
  .derive({ used: d => op.split(d.responseUsed, ", ") })
  .select("used")
  .unroll("used")
  .groupby("used")
  .count()
  .derive({ measure: d => "Have used" })
  .rename({ used: "tool" })
```

```{ojs}
countsWant = aq.from(surveyResults)
  .derive({ want: d => op.split(d.responseWant, ", ") })
  .select("want")
  .unroll("want")
  .groupby("want")
  .count()
  .derive({ measure: d => "Want to learn" })
  .rename({ want: "tool" })
```

```{ojs}
// combine the two counts into one dataset again
countsAll = [...countsUsed.objects(), ...countsWant.objects()];

plotUsed = Plot.plot({
  marks: [
    Plot.barX(countsAll, { y: "tool", x: "count", fill: "tool" }),
    Plot.ruleX([respondentCount])
  ],
  x : { label: "" },
  y : { label: "", tickSize: 0 },
  facet: { data: countsAll, x: "measure", label: "" },
  marginLeft: 140,
  style: {
    backgroundColor: "black",
    color: "white",
    width: 1350,
    height: 500,
    fontSize: 12,
  }
});
```

<!-- keep a qr code up in the top-right corner -->
![](./images/qrcode-survey.png){style="filter:invert(1);position:fixed;top:0;right:0;"}
